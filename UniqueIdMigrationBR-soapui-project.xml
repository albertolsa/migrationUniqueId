<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9bbe6031-c91d-4a18-a4c8-6231efa23f16" activeEnvironment="Default" name="UniqueIdMigrationBR" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="4c4bcb7d-924a-438e-a286-2954164a89d5" wadlVersion="http://wadl.dev.java.net/2009/02" name="ChangeUniqueId API" type="rest" basePath="/ossbss/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>API describing ChangeUniqueId API</con:description><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://babom.gvp.telefonica.com</con:endpoint></con:endpoints><con:resource name="/ChangeUniqueId" path="/ChangeUniqueId" id="c87b64b3-fc72-4f45-adda-2d25fe23beb4"><con:settings/><con:parameters/><con:method name="operationChangeUniqueId" id="b0755f83-4ed9-4e6b-b8a4-e848c0e7b152" method="POST"><con:description>For a given instance, it changes the old uniqueId for the new uniqueId
</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:chan="http://localhost/ossbss/v1/ChangeUniqueId">chan:Response</con:element></con:representation><con:request name="Request Example" id="c4f93f1f-d747-438f-af3b-a2c3b1b54e44" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089</con:endpoint><con:request>{
    "instance": "25",
    "oldUniqueid": "30203959300002",
    "newUniqueid": "TV-CTA-812EJZ6Q9-051"
}</con:request><con:originalUri>http://localhost/ossbss/v1/ChangeUniqueId</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="4be013b4-54b2-4620-acdc-e41f3813c5b7" name="ChangeUniqueId API TestSuite"><con:description>TestSuite generated for REST Service [ChangeUniqueId API]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0bbc8d2e-16f7-4542-aeeb-27e371d54ba0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/ChangeUniqueId TestCase" searchProperties="true"><con:description>TestCase generated for REST Resource [/ChangeUniqueId] located at [/ChangeUniqueId]</con:description><con:settings/><con:testStep type="properties" name="Properties" id="e0b73c74-5906-421d-aa70-d0d62ebcdc69"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TVOP_endpoint</con:name><con:value>http://localhost:8089</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="operationChangeUniqueId - Request Example" id="a5529d79-b1ee-4baf-a521-9447d7f5e339"><con:settings/><con:config service="ChangeUniqueId API" resourcePath="/ossbss/v1/ChangeUniqueId" methodName="operationChangeUniqueId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="operationChangeUniqueId - Request Example" id="c4f93f1f-d747-438f-af3b-a2c3b1b54e44" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${TVOP_endpoint}</con:endpoint><con:request>{
    "instance": "25",
    "oldUniqueid": "30203959300002",
    "newUniqueid": "TV-CTA-812EJZ6Q9-050"
}</con:request><con:originalUri>http://localhost/ossbss/v1/ChangeUniqueId</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="e5c6daee-4c53-4c3a-86c4-609e9125d424" port="8089" path="/ossbss/v1/ChangeUniqueId" host="MacBook-Pro-de-jer.local" name="REST MockService 1" docroot=""><con:settings/><con:properties/><con:onRequestScript>//Start

def json200 = """{
     "message" : "Ok"
 }
"""
def json500 = """{
	"code": "1",
	"message": "Internal Error"
}
"""
def json404 = """{
	"code": "3",
	"message": "Old UniqueId not Found"
}
"""

def responseOption=Math.abs(new Random().nextInt() % 3) + 1
log.info("Option: "+responseOption);

def json=""""{}""";
switch (responseOption)
{
	case 1:
		json=json200;
		break; 
	case 2:
		json=json500;
		break; 
	case 3:
		json=json404;
		break; 
	default:
		log.err("Something went wrong. Impossible option");
		break;
}
def response = mockRequest.getHttpResponse()
response.setContentType("application/json")
def writer = response.getWriter();
writer.write(json)
writer.close()</con:onRequestScript><con:restMockAction name="/ossbss/v1/ChangeUniqueId" method="POST" resourcePath="/ossbss/v1/ChangeUniqueId" id="21c2aef0-32d0-4fd9-8bb0-0e00d0c1b138"><con:settings/><con:defaultResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">OK</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/</con:dispatchPath></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>